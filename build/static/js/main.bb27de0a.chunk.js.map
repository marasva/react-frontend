{"version":3,"sources":["marie.webp","components/index.js","components/register.js","components/login.js","components/contentgaps.js","components/biases.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","Cookies","get","react_default","a","createElement","react_router","to","className","src","logo","alt","react_router_dom","href","Component","Register","state","username","password","firstname","lastname","response","handleChange","event","name","target","value","_this","setState","Object","defineProperty","handleSubmit","bodyFormData","FormData","entries","forEach","_ref","_ref2","slicedToArray","key","set","Axios","post","headers","Content-Type","then","console","log","data","hasOwnProperty","document","cookie","props","history","push","type","placeholder","this","onChange","onClick","Login","ContentGaps","Biases","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb27de0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marie.e5b393d3.webp\";","import React, { Component } from 'react';\nimport logo from '../marie.webp';\nimport './index.css';\nimport { Link, BrowserRouter as Router, Redirect } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\n\nclass Index extends Component {\n  render() {\n    const cookies = new Cookies();\n    if (cookies.get(\"access\") != \"granted\"){\n      return (<Redirect to=\"/login\"></Redirect>)\n    }\n    return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div className=\"title\">\n              Welcome! What are you searching for?\n            </div>\n            <Router>\n              <div className=\"buttons\">\n                <a className=\"button bias-button\" href=\"/biases/\">Biases</a>\n                <a className=\"button cg-button\" href=\"/content-gaps/\">Content-gaps</a>\n              </div>\n            </Router>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Index;\n","import React, { Component } from 'react';\nimport './login.css';\nimport 'axios';\nimport Axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { Link, BrowserRouter as Router, Redirect } from \"react-router-dom\";\n\nclass Register extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        response: \"\"\n    }\n    handleChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n    \n        this.setState({[name]: value});\n      }\n\n      handleSubmit = event => {\n        let bodyFormData = new FormData();\n        Object.entries(this.state).forEach(\n            ([key, value]) => bodyFormData.set(key, value)\n        )\n        Axios.post(\n            \"https://login-service-golang.herokuapp.com/register\",\n            bodyFormData,\n            { headers: {'Content-Type': 'multipart/form-data' }}\n        )\n        .then(response => {\n            console.log(response);\n            if (response.data.hasOwnProperty(\"access\")){\n                document.cookie = \"access=\"+response.data[\"access\"];\n                this.props.history.push('/')\n            }\n            else {\n                this.setState({\n                    response: \"Something went wrong\"\n                })\n            }\n        })\n      }\n\n  render() {\n    const cookies = new Cookies();\n    if (cookies.get(\"access\") == \"granted\"){\n      return (<Redirect to=\"/\"></Redirect>)\n    }\n    return (\n        <div className=\"login-page\">\n            <h2>Register</h2>\n            <div className=\"login-form\">\n                <input name=\"username\" type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} />\n                <input name=\"password\" type=\"text\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\n                <input name=\"firstname\" type=\"text\" placeholder=\"Firstname\" value={this.state.firstname} onChange={this.handleChange} />\n                <input name=\"lastname\" type=\"text\" placeholder=\"Lastname\" value={this.state.lastname} onChange={this.handleChange} />\n                <button onClick={this.handleSubmit}>Register</button>\n                <div>\n                    {this.state.response}\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport './login.css';\nimport Axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { Link, BrowserRouter as Router, Redirect } from \"react-router-dom\";\n\nclass Login extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n    }\n    handleChange = event => {\n        const name = event.target.name;\n        const value = event.target.value;\n    \n        this.setState({[name]: value});\n      }\n      handleSubmit = event => {\n        let bodyFormData = new FormData();\n        Object.entries(this.state).forEach(\n            ([key, value]) => bodyFormData.set(key, value)\n        )\n        Axios.post(\n            \"https://login-service-golang.herokuapp.com/login\",\n            bodyFormData,\n            { headers: {'Content-Type': 'multipart/form-data' }}\n        )\n        .then(response => {\n            console.log(response);\n            if (response.data.hasOwnProperty(\"access\")){\n                document.cookie = \"access=\"+response.data[\"access\"];\n                this.props.history.push('/')\n            }\n            else {\n                this.setState({\n                    response: \"Something went wrong\"\n                })\n            }\n        })\n      }\n\n  render() {\n    const cookies = new Cookies();\n    if (cookies.get(\"access\") == \"granted\"){\n      return (<Redirect to=\"/\"></Redirect>)\n    }\n    return (\n        <div className=\"login-page\">\n            <h2>Login</h2>\n            <div className=\"login-form\">\n            <input name=\"username\" type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} />\n            <input name=\"password\" type=\"text\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} />\n            <button onClick={this.handleSubmit}>Log in</button>\n            </div>\n            <a href=\"/register\">Don't have a user yet? Click here</a>\n        </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport './biases.css';\n\nclass ContentGaps extends Component {\n\n  render() {\n    return (\n        <div>\n            <h2>Here it will be possible to find content gaps</h2>\n        </div>\n    );\n  }\n}\n\nexport default ContentGaps;","import React, { Component } from 'react';\nimport './biases.css';\n\nclass Biases extends Component {\n\n  render() {\n    return (\n        <div>\n            <h2>Here it will be possible to find biases</h2>\n        </div>\n    );\n  }\n}\n\nexport default Biases;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Index from \"./components/index\";\nimport Register from \"./components/register\";\nimport Login from \"./components/login\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport ContentGaps from './components/contentgaps';\nimport Biases from './components/biases';\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/register/\" exact component={Register} />\n          <Route path=\"/login/\" exact component={Login} />\n          <Route path=\"/content-gaps/\" exact component={ContentGaps} />\n          <Route path=\"/biases/\" exact component={Biases} />\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}